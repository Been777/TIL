# 내일배움캠프 240426 TIL
Java 5일차
연산자, 조건문(if), 코드카타
---------------------------------------------

산술연산자 : +, -, *, /, %(나머지), <<, >>
비교연산자 : >, <, >=, <=, ==, !=
논리연산자 : &&, ||, !
대입연산자 : =, ++, --
기타연산자 : (type), ? :, instance of


연산자 우선순위 : 산술 > 비교 > 논리 > 대입
- 연산자 여러개가 함께 있는 연산을 계산할때는 우선순위가 있습니다.
- 위 우선순위에 따라서 최종적인 응답값이 결정됩니다.
- 단, 괄호로 감싸주면 괄호안의 연산이 최우선순위로 계산됩니다.


연산 전에 두 피연산자의 타입이 다른 경우 타입을 () -> 일치시킵니다
-두 피연산자의 타입을 같게 일치시킨다. (둘중에 저장공간 크기가 더 큰 타입으로 일치
 - 피연산자의 타입이 'int' 보다 작은 'short' 타입이면 'int' 로 변환
 - 피연산자의 타입이 'long' 보다 작은 'int', 'short' 타입이면 'long' 으로 변환
 - 피연산자의 타입이 'float' 보다 작은 'long', 'int', 'short' 타입이면 'float' 으로 변환
 - 피연산자의 타입이 'double' 보다 작은 'float', 'long', 'int', 'short' 타입이면 'double' 으로 변환
 - 이처럼, 변수여러개를 연산했을때 결과값은 피연산자 중 표현 범위가 가장 큰 변수 타입을 가지게 됩니다.

- 비트 연산
    - byte 를 8등분한게 bit
    - bit 는 0,1 둘중의 하나의 값만을 저장하는 컴퓨터가 저장(표현)가능한 가장 작은 단위
    - 컴퓨터의 가장작은 단위인 bit이기 때문에 연산자중에서 bit 연산이 제일 빠름
    - 물론 이전에 배운대로 0,1 값으로 산술연산을 하거나, 비교연산을 할 수 있지만 비트 연산을 통해 자리수를 옮길수도 있음
    - 이처럼 bit의 자리수를 옮기는 것을 비트 연산이라고 합니다.
    - '<<'(왼쪽으로 자리수 옮기기), '>>'(오른쪽으로 자리수 옮기기)
    - 0,1 은 2진수 값이기 때문에,
        - 자리수를 왼쪽으로 옮기는 횟수만큼 2의 배수로 곱셈이 연산되는것과 동일합니다.
        - 자리수를 오른쪽으로 옮기는 횟수만큼 2의 배수로 나눗셈이 연산되는것과 동일합니다.

연산자 정리내용
===================================================================================

w11 ~
조건문 if, switch 중 if를 배웠다 아래의 수업 내용 코드 스니펫을 보고 복습 하도록.

boolean flag = true;

        if (1 != 1) {
            //  boolean flag = true인 경우
            System.out.println("값이 true입니다.");
        } else {
            //  boolean flag = false인 경우
            System.out.println("값이 true입니다.");
        }

        // 조건문
        int number = 1;

        if (number == 1) {
            System.out.println("number값은 1입니다.");
        } else if (number == 2) {
            System.out.println("number값은 2입니다.");
        } else  {
            System.out.println("number값은 모르는 값입니다.");
        }

// 중첩 if문
        boolean flag = false;
        int number = 2;

        if (flag) {
            if (number == 1) {
                System.out.println("flag값은 true고, number값은 1입니다.");
            } else if (number == 2) {
                System.out.println("flag값은 true고, number값은 2입니다.");
            } else {
                System.out.println("flag값은 true고, number값은 모르겠습니다.");
            }
        } else {
            if (number == 1) {
                System.out.println("flag값은 false고, number값은 1입니다.");
            } else if (number == 2) {
                System.out.println("flag값은 false고, number값은 2입니다.");
            } else {
                System.out.println("flag값은 false고, number값은 모르겠습니다.");
            }


// 가위바위보
// 이 코드에서 Scanner, Objects를 볼 수가 있다.
// import java.util.Objects;
// import java.util.Scanner;
// 상단에 꼭 추가 되었나 확인 하도록
Scanner sc = new Scanner(System.in);

        // A에게 값 입력받기
        System.out.println("A 입력 : ");
        String aHand = sc.nextLine();

        // B에게 값 입력받기
        System.out.println("B 입력 : ");
        String bHand = sc.nextLine();

        // 두 개의 값을 비교하는 메서드 -> Objects.equals(좌, 우) : 좌 우가 같은 경우 true, 다른 경우 false
        if (Objects.equals(aHand,"가위 ")) {
            if (Objects.equals(bHand,"가위")){
                System.out.println("A와 B는 비겼습니다.");
            } else if (Objects.equals(bHand,"바위")) {
                System.out.println("B가 이겼습니다.");
            } else if (Objects.equals(bHand,"보")) {
                System.out.println("A가 이겼습니다.");
            } else {
                System.out.println("B가 이상한 값을 입력했습니다.");
            }
        } else if (Objects.equals(aHand,"바위")) {
            if (Objects.equals(bHand,"가위")){
                System.out.println("A가 이겼습니다.");
            } else if (Objects.equals(bHand,"바위")) {
                System.out.println("A와 B는 비겼습니다.");
            } else if (Objects.equals(bHand,"보")) {
                System.out.println("B가 이겼습니다.");
            } else {
                System.out.println("B가 이상한 값을 입력했습니다.");
            }
        } else if (Objects.equals(aHand,"보")) {
            if (Objects.equals(bHand,"가위")){
                System.out.println("B가 이겼습니다.");
            } else if (Objects.equals(bHand,"바위")) {
                System.out.println("A가 이겼습니다.");
            } else if (Objects.equals(bHand,"보")) {
                System.out.println("A와 B는 비겼습니다.");
            } else {
                System.out.println("B가 이상한 값을 입력했습니다.");
            }
        } else {
            System.out.println("A가 이상한 값을 입력했습니다.");
        }

===================================================================================

위에서 배운 내용으로 코드 카타를 해보자

정수 num1과 num2가 매개변수로 주어집니다. 두 수가 같으면 1 다르면 -1을 retrun하도록 solution 함수를 완성해주세요.

입출력 예
num1	num2	result
2	3	-1
11	11	1
7	99	-1

입출력 예 설명 #1
num1이 2이고 num2가 3이므로 다릅니다. 따라서 -1을 return합니다.
입출력 예 설명 #2
num1이 11이고 num2가 11이므로 같습니다. 따라서 1을 return합니다.
입출력 예 설명 #3
num1이 7이고 num2가 99이므로 다릅니다. 따라서 -1을 return합니다.

정답 코드는
class Solution {
    public int solution(int num1, int num2) {
        if (num1 == num2) {
            return 1;
        }else {
            return -1;
        }
    }
}

이 문제의 핵심은 같으면 1 다르면 -1을 retrun 이다.

처음 풀땐 힘들지만 다시 풀면 생각보다 쉬운거 같다 몇번이고 다시 풀어보자..